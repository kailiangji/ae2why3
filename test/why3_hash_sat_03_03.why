theory HASH_SAT_03_03


use import int.Int

function hash_1 int : int

function hash_2 int : int

function hash_3 int : int

constant x1 : int

constant x2 : int

constant x3 : int

axiom ax_1:
   let qmark_v_0 = (hash_1 x1) in
   let qmark_v_1 = (hash_1 x2) in
   let qmark_v_2 = (hash_1 x3) in
   let qmark_v_3 = (hash_2 x1) in
   let qmark_v_4 = (hash_2 x2) in
   let qmark_v_5 = (hash_2 x3) in
   let qmark_v_6 = (hash_3 x1) in
   let qmark_v_7 = (hash_3 x2) in
   let qmark_v_8 = (hash_3 x3) in
   let qmark_v_9 = (x1 + x3) in
   let qmark_v_10 = (x1 + x2) in
   ((((((((((((((((((((((((((((qmark_v_0 <> qmark_v_1) /\ (qmark_v_0 <> qmark_v_2)) /\ (qmark_v_1 <> qmark_v_2)) /\ (qmark_v_3 <> qmark_v_4)) /\ (qmark_v_3 <> qmark_v_5)) /\ (qmark_v_4 <> qmark_v_5)) /\ (qmark_v_6 <> qmark_v_7)) /\ (qmark_v_6 <> qmark_v_8)) /\ (qmark_v_7 <> qmark_v_8)) /\ ((qmark_v_0 = x1 \/ qmark_v_0 = x2) \/ qmark_v_0 = x3)) /\ ((qmark_v_1 = x1 \/ qmark_v_1 = x2) \/ qmark_v_1 = x3)) /\ ((qmark_v_2 = x1 \/ qmark_v_2 = x2) \/ qmark_v_2 = x3)) /\ ((qmark_v_3 = x1 \/ qmark_v_3 = x2) \/ qmark_v_3 = x3)) /\ ((qmark_v_4 = x1 \/ qmark_v_4 = x2) \/ qmark_v_4 = x3)) /\ ((qmark_v_5 = x1 \/ qmark_v_5 = x2) \/ qmark_v_5 = x3)) /\ ((qmark_v_6 = x1 \/ qmark_v_6 = x2) \/ qmark_v_6 = x3)) /\ ((qmark_v_7 = x1 \/ qmark_v_7 = x2) \/ qmark_v_7 = x3)) /\ ((qmark_v_8 = x1 \/ qmark_v_8 = x2) \/ qmark_v_8 = x3)) /\ (x1 <> x2)) /\ (x1 <> x3)) /\ (x2 <> x3)) /\ 0 <= x1) /\ x1 < 4) /\ 0 <= x2) /\ x2 < 4) /\ 0 <= x3) /\ x3 < 4) /\ (hash_1 (hash_1 (hash_3 (if qmark_v_9 < 4 then qmark_v_9 else x1)))) = (hash_1 (hash_1 (hash_3 (if qmark_v_10 < 4 then qmark_v_10 else x1)))))

use import bool.Bool

goal g_1:
   false

end