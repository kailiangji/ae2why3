logic hash_1 : int -> int
 
logic hash_2 : int -> int
 
logic hash_3 : int -> int
 
logic x1 : int 
logic x2 : int 
logic x3 : int 
axiom ax_1:
(let ?v_0 = hash_1(x1) in
let ?v_1 = hash_1(x2) in
let ?v_2 = hash_1(x3) in
let ?v_3 = hash_2(x1) in
let ?v_4 = hash_2(x2) in
let ?v_5 = hash_2(x3) in
let ?v_6 = hash_3(x1) in
let ?v_7 = hash_3(x2) in
let ?v_8 = hash_3(x3) in
let ?v_9 = (x1 + x3)
 in
let ?v_10 = (x1 + x2)
 in
 (((((((((((((((((((((((((((distinct(?v_0, ?v_1)
 and distinct(?v_0, ?v_2)
)
 and distinct(?v_1, ?v_2)
)
 and distinct(?v_3, ?v_4)
)
 and distinct(?v_3, ?v_5)
)
 and distinct(?v_4, ?v_5)
)
 and distinct(?v_6, ?v_7)
)
 and distinct(?v_6, ?v_8)
)
 and distinct(?v_7, ?v_8)
)
 and (((?v_0 = x1)
 or (?v_0 = x2)
)
 or (?v_0 = x3)
)
)
 and (((?v_1 = x1)
 or (?v_1 = x2)
)
 or (?v_1 = x3)
)
)
 and (((?v_2 = x1)
 or (?v_2 = x2)
)
 or (?v_2 = x3)
)
)
 and (((?v_3 = x1)
 or (?v_3 = x2)
)
 or (?v_3 = x3)
)
)
 and (((?v_4 = x1)
 or (?v_4 = x2)
)
 or (?v_4 = x3)
)
)
 and (((?v_5 = x1)
 or (?v_5 = x2)
)
 or (?v_5 = x3)
)
)
 and (((?v_6 = x1)
 or (?v_6 = x2)
)
 or (?v_6 = x3)
)
)
 and (((?v_7 = x1)
 or (?v_7 = x2)
)
 or (?v_7 = x3)
)
)
 and (((?v_8 = x1)
 or (?v_8 = x2)
)
 or (?v_8 = x3)
)
)
 and distinct(x1, x2)
)
 and distinct(x1, x3)
)
 and distinct(x2, x3)
)
 and (0 <= x1)
)
 and (x1 < 4)
)
 and (0 <= x2)
)
 and (x2 < 4)
)
 and (0 <= x3)
)
 and (x3 < 4)
)
 and (hash_1(hash_1(hash_3((if (?v_9 < 4)
 then ?v_9 else x1)))) = hash_1(hash_1(hash_3((if (?v_10 < 4)
 then ?v_10 else x1)))))
)
)

goal g_1: false
